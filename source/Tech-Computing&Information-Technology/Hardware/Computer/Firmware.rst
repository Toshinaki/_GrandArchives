
Firmware 固件
================

|  一种存储在非易失性存储器如 ROM, EPROM 或闪存内,  并嵌入在硬件设备中的特殊软件, 为特定硬件提供低层控制
|  嵌入式系统, 电器, 电脑, 电脑周边等都包含有固件

有些固件在被制造出来后其存储设备的内容无法改变; 而一般硬件可以透过对固件的升级提升其性能及可靠性

|  个人计算机的 ROM BIOS 之类的固件可以仅包含设备的基本基本功能,  并且可以仅向更高级别的软件提供服务
|  而嵌入式系统程序之类的固件可能是在系统上运行并提供其所有功能的唯一程序


BIOS
----

Basic Input/Output System 基本输入输出系统 (也叫 ROM BIOS, System BIOS, PC BIOS)

|  BIOS 是在通电引导阶段运行硬件初始化, 以及为操作系统和程序提供运行时服务的固件
|  BIOS预安装在PC主板上, 是PC启动时加载的第一个软件

许多BIOS程序都只能在特定计算机型号或特定主板型号上运行

|  早年BIOS存储于 ROM 芯片上; 
|  现在的BIOS为了方便的更新多存储于闪存芯片上

BIOS 管理功能
~~~~~~~~~~~~~~~~~~

系统引导
    BIOS用于 **初始化** 和 **测试** 系统的硬件组件, 以及从大容量存储设备 **加载引导程序**, 并由引导程序加载操作系统

    1. 当计算机的电源打开, BIOS就会从主板上的 ROM 芯片运行加电自检 (POST), 测试和初始化CPU, RAM, 直接存储器访问控制器, 主板, CMOS存贮器, 串并口, 显示卡, 键盘, 软盘, 硬盘等设备
    
    2. 初始化: 创建中断向量, 设置寄存器, 对一些外部设备进行初始化和检测等 (一个重要的部分是读取硬件设置参数, 并和实际硬件设置进行比较, 如果不符合, 会影响系统的启动)
    
    3. 按照 CMOS 设置中保存的启动顺序从引导设备 (如软硬盘驱动器及CD-ROM, 网络服务器等) 加载引导程序, 由引导程序加载操作系统 (BIOS也可从网卡等设备引导)

POST 加电自检
^^^^^^^^^^^^^^^^

Power-On Self-Test

计算机BIOS的一个功能, 在引导时针对计算机硬件进行检测, 结果会显示在屏幕上

一旦在自检中发现问题, 系统将给出提示信息或鸣笛警告

BIOS 中断调用
^^^^^^^^^^^^^^^^^

BIOS interrupt calls

用于对硬件设备进行I/O操作

但现代操作系统仅在操作系统引导时通过BIOS中断调用访问硬件

(中断是指 CPU 接收到来自硬件或软件的信号, 提示发生了某个事件, 应该被注意的情况)

BIOS系统设置
^^^^^^^^^^^^^^^^

BIOS 可以设置系统的各项参数并保存在 CMOS 中

CMOS中主要保存着系统基本情况, CPU特性, 软硬盘驱动器, 显示器, 键盘等设备的信息

设置程序在开机时按下某个特定键即可进入设置状态, 并提供了 GUI 供操作人员使用

CMOS
    Complementary Metal Oxide Semiconductor 互补金属氧化物半导体 
    
    是主板上的一块 RAM 可读写芯片, 用来保存当前系统的硬件配置和用户的参数设定, 其内容可通过BIOS程序进行读写

　　CMOS芯片由主板上的钮扣电池进行供电, 这样即使系统关机或者断电, 保存在里面的设置参数也不会丢失

Option ROM 扩展程序
^^^^^^^^^^^^^^^^^^^^^^^^^

Option ROM 是硬盘控制器, 显卡, 网卡等可能包含 BIOS 扩展程序的扩展卡, 能为 BIOS 提供附加的功能

|  系统在加电自检 (POST) 阶段查找并运行 Option ROMs (也叫BIOS Extension ROMs) 
|  Option ROM 通过 BIOS 中断调用对硬件进行测试和初始化, 并显示诊断信息或显示配置画面

部分内置于主板的设备的 Option ROM 可作为主板 BIOS 的一部分

Option ROM 通过 BIOS 引导规范扩展 BIOS 的引导功能


UEFI
----

Unified Extensible Firmware Interface 统一可扩展固件接口

用于取代16位的 BIOS

UEFI 是用模块化, C语言风格的参数堆栈传递方式, 动态链接的形式构建的系统, 较BIOS而言更易于实现, 容错和纠错特性更强, 缩短了系统研发的时间

UEFI 利用加载 EFI 驱动程序的形式, 识别及操作硬件, 不同于BIOS利用挂载实模式中断的方式增加硬件功能; 基于 EFI 的驱动模型可以使 UEFI 系统接触到所有的硬件功能, 在操作系统运行联网, 实现图形化, 多语言的BIOS设置界面, 或者无需运行操作系统即可在线更新BIOS等

一般入操作系统后 UEFI 就会停止工作, 并将系统交给操作系统; 而在某些特定的环境下, 部份 UEFI 程序可以继续执行, 以便在某些操作系统无法找到特定设备时, 该设备仍可持续运行

Secure Boot 只允许加载有适当数字签名的EFI驱动程序和EFI引导程序, 因此Secure Boot可让引导过程更安全

组成部分
    1. Pre-EFI初始化模块

        在系统开机的时候最先得到执行, 它负责最初的CPU, 芯片组及存储器的初始化工作, 紧接着加载 EFI 的驱动程序执行环境 (DXE) 

    2. EFI驱动程序执行环境

        当DXE被加载运行时, 系统便具有了枚举并加载其他 EFI 驱动程序的能力

    3. EFI驱动程序

        在基于PCI架构的系统中, 各PCI桥及PCI适配器的EFI驱动程序会被相继加载及初始化; 这时, 系统进而枚举并加载各桥接器及适配器后面的各种总线及设备的EFI驱动程序, 周而复始, 直到最后一个设备的EFI驱动程序被成功加载
        
        正因如此, EFI驱动程序可以放置于系统的任何位置, 只要能保证它可以按顺序被正确枚举

        部分EFI驱动程序还可以放置在某个磁盘的EFI系统分区 (ESP) 中, 只要这些驱动程序不是用于加载这个磁盘的驱动的必要部件

    4. 兼容性支持模块 (CSM) 

        CSM是在x86平台UEFI系统中的一个特殊的模块, 它将为不具备UEFI引导能力的操作系统 (如Windows XP) 以及16位的传统Option ROM (即非EFI的Option ROM) 提供类似于传统BIOS的系统服务

        与 Secure Boot 不兼容
        
    5. EFI高层应用
    
    6. GUID磁盘分区表

        GPT, 磁盘的主分区数不再受限制, 可以支持2.1 TB以上硬盘, 分区类型将由GUID表示

        分区类型中的 EFI 系统分区可以被 UEFI 固件访问, 可用于存放操作系统的引导程序, EFI应用程序和EFI驱动程序; UEFI固件通过运行EFI系统分区中的引导程序引导操作系统
        
        EFI 系统分区采用 FAT 文件系统, 容量较小, 在Windows操作系统下默认隐藏

在实现中, UEFI 初始化模块和驱动执行环境通常被集成在一个只读存储器中